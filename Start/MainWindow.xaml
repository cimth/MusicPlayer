<Window x:Class="Start.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Start"
        xmlns:view="clr-namespace:View;assembly=View"
        xmlns:mainContent="clr-namespace:View.MainContent;assembly=View"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="{DynamicResource Str_WindowTitle}"
        UseLayoutRounding="True"
        Height="600" Width="950" MinHeight="600" MinWidth="950"
        WindowState="Maximized">
    <!-- Unhook from keyboard when closing. -->
    <!-- 
        Use Interaction.Triggers to bind the Window events to commands.
        With the elements XML properties, only Code-Behind methods can be called.
    -->
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Close">
            <b:InvokeCommandAction Command="{Binding OnCloseCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    
    <DockPanel>
        <!-- current song (bottom) -->
        <view:CurrentSongView DockPanel.Dock="Bottom" 
                              DataContext="{Binding CurrentSongViewModel}" 
                              Background="{DynamicResource AppTurquoiseDarkestBrush}"
                              BorderBrush="{DynamicResource AppTurquoiseBorderBrush}"
                              BorderThickness="0 1 0 0"/>
        
        <!-- main content (center) -->
        <Grid>
            <!-- Grid layout -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" MinWidth="200"/>
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
        
            <!-- navigation sidebar -->
            <view:NavigationSidebar Grid.Column="0" DataContext="{Binding NavigationSidebarViewModel}" 
                                    Background="{DynamicResource AppTurquoiseLightBrush}"
                                    BorderBrush="{DynamicResource AppTurquoiseBorderBrush}"
                                    BorderThickness="0 1 1 0" />
            
            <!-- 
                Main content view (only one is shown at each time).
                Wrap in additional Grids to regulate the visibility by MainWindowViewModel.
                The Visibility of the View elements cannot be set directly because they get their own 
                ViewModel classes as DataContext.
             -->
            <Grid Grid.Column="1" Visibility="{Binding IsCurrentPlaylistViewShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                <mainContent:CurrentPlaylistView DataContext="{Binding CurrentPlaylistViewModel}" />
            </Grid>
            
            <Grid Grid.Column="1" Visibility="{Binding IsQueueViewShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                <mainContent:QueueView DataContext="{Binding QueueViewModel}" />
            </Grid>
            
            <Grid Grid.Column="1" Visibility="{Binding IsFavoritesViewShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                <mainContent:FavoritesView DataContext="{Binding FavoritesViewModel}" />
            </Grid>
            
            <Grid Grid.Column="1" Visibility="{Binding IsDirectoriesViewShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                <mainContent:DirectoriesView DataContext="{Binding DirectoriesViewModel}" />
            </Grid>
            
            <Grid Grid.Column="1" Visibility="{Binding IsPlaylistsViewShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                <mainContent:PlaylistsView DataContext="{Binding PlaylistsViewModel}" />
            </Grid>
        </Grid>
    </DockPanel>
</Window>
