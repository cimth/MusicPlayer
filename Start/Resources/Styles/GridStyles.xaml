<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:View.Converter;assembly=View">
    <!-- Headers / Toolbars, optionally with Buttons, e.g. used in DirectoryView -->
    <Style x:Key="HeaderToolbarGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource AppTurquoiseMediumBrush}" /> 
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="35" />
        
        <Setter Property="Border.BorderBrush" Value="{StaticResource AppTurquoiseBorderBrush}" />
        <Setter Property="Border.BorderThickness" Value="0 1" />
        
        <Style.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="2, 5" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Style>
            
            <Style TargetType="{x:Type Label}">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            
            <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Horizontal" />
            </Style>
            
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </Style.Resources>
    </Style>
    
    <!-- Group the items of a DataGrid by their directory -->
    <Style x:Key="DirectoryGroupStyle" TargetType="{x:Type GroupItem}">
        <Style.Resources>
            <converter:IsNotEmptyStringToVisibilityConverter x:Key="IsNotEmptyStringToVisibilityConverter" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <WrapPanel Orientation="Vertical">
                        <!-- Show a label with the name as group header (it will be the path of a directory) -->
                        
                        <!-- The group name is always called by binding to 'Name' no matter what the
                         real name of the Property grouped by is.
                         See: https://www.wpftutorial.net/datagrid.html#grouping -->
                        <Label Visibility="{Binding Name, Converter={StaticResource IsNotEmptyStringToVisibilityConverter}}"
                               FontWeight="Bold" 
                               Background="{DynamicResource GroupHeaderBrush}" 
                               Content="{Binding Name}"/>
                    
                        <!-- The actual item(s) of the group -->
                        <ItemsPresenter />
                    </WrapPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>