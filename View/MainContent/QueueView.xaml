<UserControl x:Class="View.MainContent.QueueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:View"
             xmlns:converter="clr-namespace:View.Converter"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:templates="clr-namespace:View.Templates"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             BorderBrush="{StaticResource AppTurquoiseBorderBrush}" BorderThickness="0 1 0 0">
    <UserControl.Resources>
        <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converter:InvertNullToVisibilityConverter x:Key="InvertNullToVisibilityConverter" />
        <converter:DoubleSecondsToTimerStringConverter x:Key="DoubleSecondsToTimerStringConverter" />
        <converter:StringArrayToCommaSeparatedStringConverter x:Key="StringArrayToCommaSeparatedStringConverter" />
        <converter:EqualsConverter x:Key="EqualsConverter" />
    </UserControl.Resources>
    
    <Grid>
        <!-- Grid layout -->
        <Grid.RowDefinitions>
            <!-- Label for heading -->
            <RowDefinition Height="Auto" />
            <!-- Grid with the Queue data -->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <!-- Heading -->
        <Label Grid.Row="0" FontWeight="Bold"
               Content="{DynamicResource Str_Queue}"
               Background="{StaticResource AppTurquoiseDarkestBrush}" />
        
        <!-- Queue data -->
        <Grid Grid.Row="1">
            <!-- Grid layout -->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            
            <!-- Header for Queue data -->
            <Border Grid.Row="0" 
                    BorderBrush="{DynamicResource AppTurquoiseBorderBrush}" BorderThickness="0 1">
                <StackPanel Style="{DynamicResource HeaderToolbarStyle}">
                    <!-- Heading -->
                    <Label Content="{DynamicResource Str_Playlists}" />
                    
                    <!-- Separator -->
                    <Separator />
                    
                    <!-- Remove playlist -->
                    <Button ToolTip="{DynamicResource Str_Remove}" Command="{Binding RemoveFromQueueCommand}">
                        <svgc:SvgBitmap AppName="Start" UriSource="/Resources/Icons/remove-circle-outline.svg" />
                    </Button>
                </StackPanel>
            </Border>
            
            <templates:PlaylistGrid Grid.Row="1" 
                                    ItemsSource="{Binding SongPlayer.Queue}"
                                    SelectedIndex="{Binding SelectedQueueIndex}"
                                    AllowDraggingRows="True">
                <!-- KeyBindings -->
                <templates:PlaylistGrid.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding RemoveFromQueueCommand}" />
                </templates:PlaylistGrid.InputBindings>
                
                <!-- Show data as columns -->
                <!-- For localization the header needs to be bound to a DynamicResource.
                     The dynamic resource cannot be used as usual inside the DataGridTextColumn markup but needs
                     to be addressed inside the DataGridTextColumn.Header element to work -->
                <DataGrid.Columns>
                    <!-- Name -->
                    <DataGridTextColumn MinWidth="450"
                                        Binding="{Binding Name}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource Str_Name}" />
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    
                    <!-- Songs (count) -->
                    <DataGridTextColumn MinWidth="300"
                                        Binding="{Binding Songs.Count}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource Str_Songs}" />
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    
                    <!-- Duration -->
                    <DataGridTextColumn MinWidth="75"
                                        Binding="{Binding TotalDuration.TotalSeconds, Converter={StaticResource DoubleSecondsToTimerStringConverter}}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{DynamicResource Str_Duration}" />
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </templates:PlaylistGrid>
        </Grid>
    </Grid>
</UserControl>
